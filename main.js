// Generated by Haxe 4.3.1
(function ($global) { "use strict";
var Main = function() { };
Main.main = function() {
	var input = window.document.createElement("input");
	input.type = "file";
	input.multiple = false;
	window.document.body.appendChild(input);
	input.addEventListener("change",function() {
		window.document.body.removeChild(input);
		var file = input.files[0];
		var reader = new FileReader();
		reader.readAsText(file);
		reader.addEventListener("load",function() {
			var csv = reader.result;
			var rows = csv.split("\n");
			var entries = [];
			var _g = 0;
			while(_g < rows.length) {
				var row = rows[_g];
				++_g;
				if(row != rows[0]) {
					entries.push(row.split(";"));
				}
			}
			var _g = 0;
			while(_g < entries.length) {
				var row = entries[_g];
				++_g;
				var div = window.document.createElement("div");
				window.document.body.appendChild(div);
				var p = window.document.createElement("p");
				p.innerHTML = "<b>" + row[0] + " " + row[1] + "</b>";
				div.appendChild(p);
				var _g1 = 0;
				while(_g1 < row.length) {
					var entry = row[_g1];
					++_g1;
					if(entry != row[0] && entry != row[1] && entry != row[6]) {
						var p1 = window.document.createElement("p");
						p1.innerText = entry.toString();
						div.appendChild(p1);
					}
				}
			}
		});
	});
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
Main.main();
})({});
